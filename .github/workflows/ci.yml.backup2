name: CD on Assets Change

permissions:
  contents: read
  id-token: write

on:
  push:
    paths:
      - 'assets/**'
    branches:
      - master
  workflow_dispatch:  # ‚Üê manual trigger button in GitHub

env:
  AWS_REGION: us-west-2
  ECR_REPOSITORY: tasky
  IMAGE_TAG: latest
  ECR_URI: 727646490103.dkr.ecr.us-west-2.amazonaws.com/tasky

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: AWS_ACCESS_KEY_ID

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Run go mod tidy
      run: go mod tidy

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    # Docker layer caching: Save cache between builds
    - name: Cache Docker layers
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-docker-${{ hashFiles('**/Dockerfile', '**/go.mod', '**/go.sum') }}  # Based on Dockerfile and Go dependencies
        restore-keys: |
          ${{ runner.os }}-docker-

    - name: Create Buildx Builder and Push Image
      run: |
        docker buildx create --use
        docker buildx build \
          --platform linux/amd64,linux/arm64 \
          -t $ECR_URI:$IMAGE_TAG \
          --push \
          --cache-from=type=gha \
          --cache-to=type=gha,mode=max .

    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.27.3'

    - name: Set up kubeconfig
      run: |
        aws eks update-kubeconfig --name demo-cluster --region us-west-2

    - name: Rollout Restart Deployment
      run: |
        kubectl rollout restart deployment tasky-deployment -n wiztest

